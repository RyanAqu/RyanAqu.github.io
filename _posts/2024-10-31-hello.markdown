---
layout:     post
title:      "Hello 2024"
subtitle:   " \"Hello World, Hello Blog, Hello Git, Hello MD \""
date:       2024-10-31 16:17:00
author:     "Ryan"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - git
    - markdown
---

> “All alone again as he walks the empty path , searching for the place that he's seen inside his dreams”

# “走在这条空旷的道路上，他再次变得孤独一人,寻找着他在梦中看见的地方”

Ryan的博客就这样开通了。在一个东大4系的无线研究生，正式开始他的不务正业之旅之前，简单地描述一下他这一年多的学术生涯：从研究生9月入学到现在，干了一年的**backscatter_iot**项目，浅浅的入门了backscatter散射通信。本来嘛，听博士师姐说，“背散+柔性射频”是能发顶会的方向，奈何参与的项目属于秘籍，忙活到最后甚至连一篇专利也没有，而研究方向的毕业大论文也是给一起做项目的课题组的师兄去写。ok,fine~ ，看来这辈子是与学术无缘了「有点难过」。

在2024年的上半年，老师又给了一个**项目“High-band microwave photonic vector signal generation and optimization”**，大抵就是作为我研究的方向了，于是开始了读论文、做综述、做仿真&做汇报的枯燥生活。与此同时，还要跟进**backscatter_iot的verilog开发、低功耗设计、上位机开发**。在2024年暑假的时候，因为在第一个大项目里面的工作比较突出，老师又让我做一个**北斗卫星定位**嵌入式系统，忙忙碌碌两个月时间，最后交了一个系统方案（**stm32+串口屏+ESP8266+GPS北斗**）上去。然后今年10月份，**backscatter_iot**的项目顺利结项，**“高频段微波光子矢量信号”** 还在科研，**北斗卫星定位** 没有消息，可能由其他专业的嵌入式团队去跟进了……

总而言之，我的大多数时间都投入到了学我不感兴趣的“微波光子学”上，而我所感兴趣的“FPGA、嵌入式、数字IC”等，虽然因为在项目中有所应用也花了不少时间和精力去开发，但还是和预期所学相去甚远「都是我早就会的东西，没意思」。 所以，为了从麻木的生活中解放出来，去**系统地**学习一些我真的感兴趣的内容，我决定开始我自己的博客创作，一边学习，一边记录。从2024.10.29开始，折腾了两天，学习了git、markdown、web的一些知识，终于在github上搭建了属于自己的博客，在学习知识的同时，还能练习markdown语法，熟悉git代码管理。这里很感谢@Hux提供的开源博客框架，很简洁，很赞的风格。

拜托，有一个独立的博客和website真的很酷哎！

# 第一篇博客，从git和markdown开始
## GIT
在使用github搭建博客的过程中，学习了git管理代码仓库，最初fork了 [Huxpro/huxpro.github.io][1]，然后下载代码仓到本地进行修改「下载到本地的原因是因为在github网页上修改不方便」。使用http或者SSH链接和git bash进行下载，如果直接下载代码仓zip文件，文件没有.git隐藏文件，所以最好用git bash下载。[git程序下载与使用参考][2]
![image](https://github.com/user-attachments/assets/1f246fed-925c-4038-a924-3a4005e4c7a9)

### Git Bash初始化
打开git-bash.exe，在桌面快捷方式/开始菜单/安装目录中

因为Git是分布式版本控制系统，所以需要填写用户名和邮箱作为一个标识，用户和邮箱为你github注册的账号和邮箱
```
git config --global user.name "你的GitHub昵称"
git config --global user.email "你的GitHub邮箱"
```
### Github账户设置SSH key
Git Bash生成密钥，然后在http://github.com 里设置密钥「为什么要这么做？因为好用」

首先cd到用户文件夹检查是否有.ssh密钥
```
cd C:\Users\你的用户名\.ssh
```
生成ssh密钥
```
ssh-keygen -t rsa -C “你的邮箱”
```
生成成功后，去对应目录C:\Users\你的电脑用户名\.ssh里，用记事本打开id_rsa.pub，得到ssh key公钥，直接复制到github头像下的settings，找到SSH and GPG keys添加一个new ssh，为它命名，将记事本内容复制到key的文本框
![image](https://github.com/user-attachments/assets/e7434372-9ea3-41f5-9550-b0424bf42a6b)
### 将本地项目目录变成GitHub代码仓
假如你在本地已经有了一个项目目录，但是还没有用github管理

首先cd到项目目录下，然后
```
git init //把这个目录变成Git可以管理的仓库，命令完成后会在目录下生成一个.git的隐藏目录，此文件夹用来跟踪管理版本库
```
### 关联GitHub上的远程代码仓
```
git remote add origin git@github.com:******* //关联远程仓库
```
### clone已有代码仓
```
git clone git@github.com:RyanAqu/RyanAqu.github.io.git //克隆github代码仓到本地，包含版本信息
```
### commit提交本地代码到仓库
```
git add . //add全部文件到tree 
git commit -m "first commit" //把文件提交到仓库，“”内是提交描述，commit会生成哈希文件
```
### push提交本地代码仓到远程仓库
```
git push -u origin master //把本地库的所有内容推送到远程库上
```
### 跟踪git的流程
```
git log //查看提交记录
git status //查看仓库状态
```







## MARKDOWN语法
### 段落
```
这是一个普通的段落
```
这是一个普通的段落
```
行一（两个空格加一个回车）  
行二
```
行一  
行二
```
段落一（两个回车）

段落二
```
段落一

段落二
### 字体
```
*这是斜体*
_这是斜体_
**这是粗体**
__这是粗体__
***这是粗斜体***
___这是粗斜体___
```
*这是斜体*  
_这是斜体_  
**这是粗体**  
__这是粗体__  
***这是粗斜体***  
___这是粗斜体___  
### 分隔符
```
****
----
```
****
----
### 删除线
```
无删除线
~~有删除线~~
```
无删除线  
~~有删除线~~
### 下划线
```
<u>使用u标签</u>
```
<u>使用u标签</u>
### 标题
```
这是一级标题
======
这是二级标题
------
```

这是一级标题
======

这是二级标题
------
```
# 这是一级标题
## 这是二级标题
### 这是三级标题
#### 这是四级标题
##### 这是五级标题
###### 这是六级标题
```
# 这是一级标题
## 这是二级标题
### 这是三级标题
#### 这是四级标题
##### 这是五级标题
###### 这是六级标题
### 区块与列表
```
> 这是一个区块
```
> 这是一个区块

```
> 这是一个区块
> * 这是区块中的列表
```
> 这是一个区块
> * 这是区块中的列表

```
* 这是一个列表
> 这是列表中的区块
```
* 这是一个列表
> 这是列表中的区块


```
* 这是无序列表
+ 这是无序列表
- 这是无序列表
```
* 这是无序列表
+ 这是无序列表
- 这是无序列表


```
1. 这是有序列表
2. 这是有序列表
  1. 这是有序列表
```
1. 这是有序列表
2. 这是有序列表
   1. 这是有序列表


### 代码
````
```
这里是代码（或者四个空格后直接开始写）
```
````
```
这里是代码
```
### 表格
```
| 表头一(左对齐) | 表头二（居中对齐） | 表头三（右对齐） |
|:----|:----:|----:|
| 单元格 | 单元格 | 单元格 |
```
| 表头一(左对齐) | 表头二（居中对齐） | 表头三（右对齐） |
|:---|:---:|---:|
| 单元格 | 单元格 | 单元格 |
### 链接
```
[百度](https://www.baidu.com)
```
[百度](https://www.baidu.com)
```
[百度][3]

[3]:https://www.baidu.com  (在文末写)
```
[百度][3]
### 对齐标签
```
<p align="left">内容在这里</p>
<p align="ceter">内容在这里</p>
<p align="right">内容在这里</p>
<p align="justify">内容在这里</p>
```
<p align="left">内容在这里</p>
<p align="ceter">内容在这里</p>
<p align="right">内容在这里</p>
<p align="justify">内容在这里</p>

### 公式
公式有行内公式和行间公式两种，涉及到的语法较为复杂，以下为一个简单例子,具体参考CSDN论坛[markdown公式编辑][4]
```
$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.$ 
$$
\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.
$$
```
$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.$ 

$$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.$$



[1]:https://github.com/Huxpro/huxpro.github.io
[2]:https://zhuanlan.zhihu.com/p/193140870
[3]:https://www.baidu.com
[4]:https://blog.csdn.net/qq_45691197/article/details/138620724?spm=1001.2014.3001.5506

