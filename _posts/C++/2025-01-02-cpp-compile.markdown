---
layout:     post
title:      "Compile Command"
subtitle:   " \"learning……\""
date:       2025-01-02 17:16:00
author:     "Ryan"
header-img: "img/bg-walle.jpg"
catalog:    true
tags:
    - c++
    - compile
---

> Hey,亲爱的工作狂先生，新的一年不要对自己太苛刻了～

# 编译过程  
C++ 编译过程可以分为预处理、编译、汇编、链接等几个主要的阶段，每个阶段的输出都会成为下一阶段的输入。

## 预处理  
预处理（Preprocessing），将项目中所有.cpp文件展开，转化为.i文件，前提是所有的.cpp和.h文件没有语法错误且进行了合理的包含。在这个阶段，C++ 预处理器（cpp）会处理所有的预处理指令，如 #include、#define 和 #ifndef 等。预处理的目的是生成一个没有宏定义、头文件包含等指令的源代码文件。预处理的结果通常是一个纯净的 .i 文件，包含了展开后的代码。

* 宏展开：对宏进行替换。
* 文件包含：替换 #include 指令，插入相应的头文件内容。
* 条件编译：处理 #if、#ifdef 等条件编译指令，决定哪些代码会被编译，哪些代码会被忽略。
* 去除注释

预处理命令：
````
g++ -E hello.cpp -o hello.i        //将源文件变成.i文件
g++ -E main.cpp -o main.i
````

## 编译  
编译（Compilation），编译器将预处理后的源代码转换成汇编代码。这个阶段的工作是语法分析、语义分析，并生成与平台相关的低级指令。编译后产生的文件通常是 .s 格式的汇编源文件。  

* 语法分析：检查程序是否符合语法规则，生成抽象语法树（AST）。
* 语义分析：检查程序中的类型是否正确、变量是否已声明等。
* 生成汇编：生成平台相关的汇编代码。

编译命令：
````
g++ -S main.i -o main.s            //将.i文件编译成.s汇编文件
g++ -S hello.i -o hello.s
````



## 汇编  
汇编器（as）将汇编源文件（.s）转化为目标文件（.o 或 .obj）。在这个阶段，汇编器将汇编代码转换成机器码，生成的目标文件通常是二进制的，但仍然包含符号和调试信息。
## 链接




















